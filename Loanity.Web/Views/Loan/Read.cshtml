@model IEnumerable<Loanity.Domain.Dtos.LoanDto>

@{
    ViewData["Title"] = "Loans";
}

<h2 class="text-2xl font-bold text-gray-800 mb-6 text-center">Loans</h2>

@* ---------------- Search + Filter ---------------- *@
<div id="loanFilters" class="filters" role="toolbar" aria-label="Filter loans by status" style="display: flex;flex-direction: row-reverse;align-items: baseline;">
    <button class="dot-btn active" data-filter="active" title="Active" aria-pressed="false"></button>
    <button class="dot-btn overdue" data-filter="overdue" title="Overdue" aria-pressed="false"></button>
    <button class="dot-btn closed" data-filter="closed" title="Closed" aria-pressed="false"></button>
    
      @* ---------------- Search + Filter Input---------------- *@
    <div class="flex items-center gap-2" style="margin:auto!important; padding-bottom:inherit!important">
        <span class="dot-label">Search</span>
        <input id="searchLoan" type="text" placeholder="Search loans..." 
        class="px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 w-64" />
        <button type="button" class="btn-link p-0" data-clear" data-clear>Clear</button>
    </div>
</div>
@* -------------------------------------------------- *@

<div class="overflow-x-auto bg-white shadow rounded-lg">
    <table id="loanTable" class="w-full border-collapse">
        <thead class="bg-gray-100 text-gray-700">
            <tr>
                <th class="px-4 py-2 text-left">Loan Id</th>
                <th class="px-4 py-2 text-left">User Id</th>
                <th class="px-4 py-2 text-left">Start At</th>
                <th class="px-4 py-2 text-left">Due At</th>
                <th class="px-4 py-2 text-left">Returned At</th>
                <th class="px-4 py-2 text-left">Status</th>
                <th class="px-4 py-2 text-left">Items</th>
                <th class="px-4 py-2 text-left">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var loan in Model)
            {
                var status = loan.Status?.ToLowerInvariant() ?? "unknown";
                <tr class="border-t hover:bg-gray-50" data-status="@status">
                    <td class="px-4 py-2">@loan.Id</td>
                    <td class="px-4 py-2">@loan.UserId</td>
                    <td class="px-4 py-2">@loan.StartAt.ToString("dd.MM.yyyy HH.mm.ss")</td>
                    <td class="px-4 py-2">@loan.DueAt.ToString("dd.MM.yyyy HH.mm.ss")</td>
                    <td class="px-4 py-2">
                        @(loan.ReturnedAt?.ToString("dd.MM.yyyy HH.mm.ss") ??
                          "<span class='text-gray-400 italic'>Not Returned</span>")
                    </td>
                    <td class="px-4 py-2">
                        <span class="px-2 py-1 rounded text-sm
                            @(loan.Status == "Active" ? "bg-green-100 text-green-700" :
                              loan.Status == "Overdue" ? "bg-red-100 text-red-700" :
                              "bg-gray-100 text-gray-600")">
                            @loan.Status
                        </span>
                    </td>
                    <td class="px-4 py-2 space-x-1">
                        @foreach (var item in loan.Items)
                        {
                            <span class="inline-block px-2 py-1 bg-indigo-100 text-indigo-700 rounded text-xs">
                                @item.EquipmentId
                            </span>
                        }
                    </td>
                    <td class="px-4 py-2 space-x-2">
                        <form asp-action="Delete" asp-route-id="@loan.Id" method="post" class="inline">
                            <button type="submit"
                                    class="px-3 py-1 bg-red-600 text-white rounded-lg shadow hover:bg-red-700 text-sm"
                                    onclick="return confirm('Are you sure you want to delete this loan?');">
                                Delete
                            </button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            initColorFilter({
                wrapper: "#loanFilters",
                table: "#loanTable",
                search: "#searchLoan"
            });
        });
    </script>
}
